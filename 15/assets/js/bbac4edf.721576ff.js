"use strict";(self.webpackChunkessentials_security=self.webpackChunkessentials_security||[]).push([[5308],{5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>g});var r=n(6540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(n),y=i,g=c["".concat(l,".").concat(y)]||c[y]||d[y]||a;return n?r.createElement(g,o(o({ref:t},u),{},{components:n})):r.createElement(g,o({ref:t},u))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=y;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},5282:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(8168),i=(n(6540),n(5680));const a={},o="Introduction",s={unversionedId:"Demystifying the Web/Hacking the Web/Reading/introduction",id:"Demystifying the Web/Hacking the Web/Reading/introduction",title:"Introduction",description:"Last session we learned how browsers work, what HTTP and HTML are and how to use curl and wget to imitate a browser.",source:"@site/docs/Demystifying the Web/Hacking the Web/Reading/introduction.md",sourceDirName:"Demystifying the Web/Hacking the Web/Reading",slug:"/Demystifying the Web/Hacking the Web/Reading/introduction",permalink:"/essentials-security/15/Demystifying the Web/Hacking the Web/Reading/introduction",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Reading",permalink:"/essentials-security/15/Demystifying the Web/Hacking the Web/Reading/"},next:{title:"Cookies",permalink:"/essentials-security/15/Demystifying the Web/Hacking the Web/Reading/cookies"}},l={},p=[{value:"Reminders and Prerequisites",id:"reminders-and-prerequisites",level:2},{value:"Sending HTTP Requests from Python",id:"sending-http-requests-from-python",level:2}],u={toc:p},c="wrapper";function d(e){let{components:t,...n}=e;return(0,i.yg)(c,(0,r.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"introduction"},"Introduction"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"../../rediscovering-the-browser/"},"Last session")," we learned how browsers work, what HTTP and HTML are and how to use ",(0,i.yg)("inlineCode",{parentName:"p"},"curl")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"wget")," to imitate a browser.\nToday we'll dive deeper into the inner workings of browsers.\nSpecifically, we will:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"learn how to use the developer tools to inspect the requests it makes"),(0,i.yg)("li",{parentName:"ul"},"learn what cookies are"),(0,i.yg)("li",{parentName:"ul"},"learn how to use them from the command-line"),(0,i.yg)("li",{parentName:"ul"},"learn how to write Python scripts that send HTTP requests")),(0,i.yg)("h2",{id:"reminders-and-prerequisites"},"Reminders and Prerequisites"),(0,i.yg)("p",null,"Remember these concepts from the ",(0,i.yg)("a",{parentName:"p",href:"../../rediscovering-the-browser/"},"previous session"),":"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"by default, HTTP is a ",(0,i.yg)("strong",{parentName:"li"},"stateless")," protocol.\nEvery request is independent from any other"),(0,i.yg)("li",{parentName:"ul"},"HTTP supports fixed methods, such as ",(0,i.yg)("inlineCode",{parentName:"li"},"GET"),", ",(0,i.yg)("inlineCode",{parentName:"li"},"PUT"),", ",(0,i.yg)("inlineCode",{parentName:"li"},"POST")," etc."),(0,i.yg)("li",{parentName:"ul"},"HTTP servers respond with status codes and, optionally, data."),(0,i.yg)("li",{parentName:"ul"},"web browsers such as Firefox are HTTP clients"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"curl")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"wget")," are used to send HTTP requests and to download files, respectively")),(0,i.yg)("p",null,"For this session, you need:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"a working internet connection"),(0,i.yg)("li",{parentName:"ul"},"basic knowledge of the HTTP protocol"),(0,i.yg)("li",{parentName:"ul"},"a Linux machine"),(0,i.yg)("li",{parentName:"ul"},"a Firefox browser"),(0,i.yg)("li",{parentName:"ul"},"a Python interpreter (at least Python3.6)")),(0,i.yg)("h2",{id:"sending-http-requests-from-python"},"Sending HTTP Requests from Python"),(0,i.yg)("p",null,"The module we need in order to handle requests in Python is called ",(0,i.yg)("inlineCode",{parentName:"p"},"requests"),".\nIt contains methods for all types of HTTP requests: ",(0,i.yg)("inlineCode",{parentName:"p"},"GET"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"POST"),", etc."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-python"},"import requests as req\n\nURL = 'https://httpbin.org'\n\n# Send a `GET` request.\n# `params` is a dictionary of query parameters.\n# `response` is an object.\nresponse = req.get(f'{URL}/get', params={'name': 'SSS', 'role': 'boss'})\n# This request is equivalent to:\n# GET URL?name=SSS?role=boss\n\n# We must access its fields to gain specific information.\nprint(response.status_code)  # The status code returned by the server\nprint(response.text)  # The HTML sent by the server\n\npayload = {'skill': 'infinite'}\nresponse = req.post(f'{URL}/post', data=payload)\n")))}d.isMDXComponent=!0}}]);