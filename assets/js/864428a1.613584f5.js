"use strict";(self.webpackChunkessentials_security=self.webpackChunkessentials_security||[]).push([[5049],{5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>m});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(n),y=a,m=d["".concat(s,".").concat(y)]||d[y]||u[y]||o;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=y;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[d]="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},4825:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=n(8168),a=(n(6540),n(5680));const o={},i="Data, Data Everywhere",c={unversionedId:"Binary Introduction/Taming the Stack/Reading/data-data-everywhere",id:"Binary Introduction/Taming the Stack/Reading/data-data-everywhere",title:"Data, Data Everywhere",description:"Up until now, we've learnt that our application (or program) is made out of data and code.",source:"@site/docs/Binary Introduction/Taming the Stack/Reading/data-data-everywhere.md",sourceDirName:"Binary Introduction/Taming the Stack/Reading",slug:"/Binary Introduction/Taming the Stack/Reading/data-data-everywhere",permalink:"/essentials-security/Binary Introduction/Taming the Stack/Reading/data-data-everywhere",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Introduction",permalink:"/essentials-security/Binary Introduction/Taming the Stack/Reading/introduction"},next:{title:"Stack",permalink:"/essentials-security/Binary Introduction/Taming the Stack/Reading/stack"}},s={},l=[],p={toc:l},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.yg)(d,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"data-data-everywhere"},"Data, Data Everywhere"),(0,a.yg)("p",null,"Up until now, we've learnt that our application (or program) is made out of data and code.\nWhile the code is the engine of the process, as it obviously tells the processor the work that it should do, data is the most interesting (and dangerous) part when it comes to changing the execution of an app.\nWhy, you might ask?\nWell, because it's modifiable;\nthe majority of the data contained by your program lays around in the ",(0,a.yg)("inlineCode",{parentName:"p"},".stack"),", ",(0,a.yg)("inlineCode",{parentName:"p"},".heap")," or ",(0,a.yg)("inlineCode",{parentName:"p"},".data")," sections of the executable, which makes it ",(0,a.yg)("strong",{parentName:"p"},"writable"),".\nAnd therefore, even more appealing to the attackers."),(0,a.yg)("p",null,"Attacks on ",(0,a.yg)("inlineCode",{parentName:"p"},".rodata")," variables are rarely possible due to the protections enforced by the permissions, or lack thereof.\nEven though less protected, the ",(0,a.yg)("inlineCode",{parentName:"p"},".text")," section also gets fewer attacks, as the ",(0,a.yg)("inlineCode",{parentName:"p"},"W ^ X")," security feature becomes the norm."),(0,a.yg)("p",null,"The gate remains open for malicious endeavours on the ",(0,a.yg)("inlineCode",{parentName:"p"},".stack"),", ",(0,a.yg)("inlineCode",{parentName:"p"},".heap")," and ",(0,a.yg)("inlineCode",{parentName:"p"},".data")," sections, and, today, we'll discuss the most prolific one: the stack."))}u.isMDXComponent=!0}}]);