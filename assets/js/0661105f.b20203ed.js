"use strict";(self.webpackChunkessentials_security=self.webpackChunkessentials_security||[]).push([[7756],{5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>d});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=l(n),y=a,d=m["".concat(s,".").concat(y)]||m[y]||p[y]||i;return n?r.createElement(d,o(o({ref:t},u),{},{components:n})):r.createElement(d,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=y;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[m]="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},6145:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=n(8168),a=(n(6540),n(5680));const i={},o="Summary",c={unversionedId:"Binary Introduction/Taming the Stack/Reading/summary",id:"Binary Introduction/Taming the Stack/Reading/summary",title:"Summary",description:"The both curse and blessing of modern C/C++ code is the absolute control over memory it gives the programmer.",source:"@site/docs/Binary Introduction/Taming the Stack/Reading/summary.md",sourceDirName:"Binary Introduction/Taming the Stack/Reading",slug:"/Binary Introduction/Taming the Stack/Reading/summary",permalink:"/essentials-security/Binary Introduction/Taming the Stack/Reading/summary",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Functions and the Stack",permalink:"/essentials-security/Binary Introduction/Taming the Stack/Reading/functions-and-the-stack"},next:{title:"Further Reading",permalink:"/essentials-security/Binary Introduction/Taming the Stack/Reading/further-reading"}},s={},l=[],u={toc:l},m="wrapper";function p(e){let{components:t,...n}=e;return(0,a.yg)(m,(0,r.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"summary"},"Summary"),(0,a.yg)("p",null,"The both curse and blessing of modern C/C++ code is the absolute control over memory it gives the programmer.\nThis comes as a doubled edged sword:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"the stack is just an array: we can modify and access it with ",(0,a.yg)("inlineCode",{parentName:"li"},"push")," and ",(0,a.yg)("inlineCode",{parentName:"li"},"pop"),", but also by using the special stack registers, ",(0,a.yg)("inlineCode",{parentName:"li"},"esp")," and ",(0,a.yg)("inlineCode",{parentName:"li"},"ebp")),(0,a.yg)("li",{parentName:"ul"},"direct access to the return address of the function at ",(0,a.yg)("inlineCode",{parentName:"li"},"ebp + 4")),(0,a.yg)("li",{parentName:"ul"},"direct access to the parameters, found either in registers or on stack, at ",(0,a.yg)("inlineCode",{parentName:"li"},"ebp + 8"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"ebp + 12"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"ebp + 16")," etc")),(0,a.yg)("p",null,"making the program vulnerable to ROP attacks."))}p.isMDXComponent=!0}}]);