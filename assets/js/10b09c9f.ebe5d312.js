"use strict";(self.webpackChunkessentials_security=self.webpackChunkessentials_security||[]).push([[2103],{5680:(e,t,n)=>{n.d(t,{xA:()=>m,yg:()=>g});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},h="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),h=p(n),d=o,g=h["".concat(l,".").concat(d)]||h[d]||c[d]||a;return n?r.createElement(g,s(s({ref:t},m),{},{components:n})):r.createElement(g,s({ref:t},m))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[h]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7223:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(8168),o=(n(6540),n(5680));const a={},s="Routers",i={unversionedId:"Demystifying the Web/Explaining the Internet/Reading/routers",id:"Demystifying the Web/Explaining the Internet/Reading/routers",title:"Routers",description:"It is impossible to connect your PC / laptop directly (physically) to every PC or server in the world.",source:"@site/docs/Demystifying the Web/Explaining the Internet/Reading/routers.md",sourceDirName:"Demystifying the Web/Explaining the Internet/Reading",slug:"/Demystifying the Web/Explaining the Internet/Reading/routers",permalink:"/essentials-security/Demystifying the Web/Explaining the Internet/Reading/routers",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Layers on Layers on Layers",permalink:"/essentials-security/Demystifying the Web/Explaining the Internet/Reading/layers"},next:{title:"URLs",permalink:"/essentials-security/Demystifying the Web/Explaining the Internet/Reading/urls"}},l={},p=[{value:"IP Addresses",id:"ip-addresses",level:2},{value:"<code>ping</code>",id:"ping",level:3}],m={toc:p},h="wrapper";function c(e){let{components:t,...a}=e;return(0,o.yg)(h,(0,r.A)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"routers"},"Routers"),(0,o.yg)("p",null,"It is impossible to connect your PC / laptop directly (physically) to every PC or server in the world.\nTherefore, we need ",(0,o.yg)("strong",{parentName:"p"},"networks"),", which are basically aggregations of hosts (servers, PCs, laptops, mobile phones etc.)."),(0,o.yg)("p",null,"Each network contains one ",(0,o.yg)("strong",{parentName:"p"},"router")," which sends data between the hosts in its network and those on other networks.\nSo a router is a networking device that connects two or more networks.\nThink of the router you most probably have at home.\nThere is a ",(0,o.yg)("em",{parentName:"p"},"local network"),", to which you can connect via Wi-Fi, or Ethernet cables.\nYou're probably doing this right now.\nAnother network is the one provided by your Internet Service Provider (ISP)."),(0,o.yg)("p",null,"There are many ISPs around the world and even more local home networks.\nThe web thus becomes a ",(0,o.yg)("em",{parentName:"p"},"web of routers")," who transmit ",(0,o.yg)("strong",{parentName:"p"},"packets")," from one network to another.\nBack to our example above, you will surely need many routers to get a packet from the US to India."),(0,o.yg)("p",null,"But how does a router know how where to send a packet?\nLet's say a router R1 connects a laptop with IP ",(0,o.yg)("inlineCode",{parentName:"p"},"192.168.100.5")," and a PC with IP ",(0,o.yg)("inlineCode",{parentName:"p"},"192.168.100.10")," to the external network, as shown in the image below."),(0,o.yg)("p",null,(0,o.yg)("img",{alt:"Router in Action",src:n(253).A})),(0,o.yg)("p",null,"Now let's look at 2 different scenarios:"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},"If the laptop sends a packet to IP ",(0,o.yg)("inlineCode",{parentName:"li"},"192.168.100.10"),", the router knows this address is part of its ",(0,o.yg)("strong",{parentName:"li"},"Local Area Network (LAN)")," and sends it directly to the PC."),(0,o.yg)("li",{parentName:"ol"},"If the PC sends a packet to ",(0,o.yg)("inlineCode",{parentName:"li"},"upb.ro")," (with IP ",(0,o.yg)("inlineCode",{parentName:"li"},"141.85.220.33"),"), the router sees its IP as an external address.\nTherefore, it passes it into the internet, where other routers take it and then pass it again to other routers and so on, until the packet reaches ",(0,o.yg)("inlineCode",{parentName:"li"},"upb.ro"),".")),(0,o.yg)("p",null,"Each new router that a packet encounters on its way from source to destination is called a ",(0,o.yg)("strong",{parentName:"p"},"hop"),".\nMost often, a hop is a router.\nIn order to visualise the hops that our requests to a well-known service, such as ",(0,o.yg)("inlineCode",{parentName:"p"},"google.com"),", we use the ",(0,o.yg)("inlineCode",{parentName:"p"},"traceroute")," command:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"\u250c\u2500\u2500(kali\u327fkali)-[~]\n\u2514\u2500$ traceroute google.com\ntraceroute to google.com (142.250.185.206), 30 hops max, 60 byte packets\n 1  _gateway (10.0.2.2)  0.212 ms  0.123 ms  0.228 ms\n 2  10.20.21.254 (10.20.21.254)  2.815 ms  3.908 ms  3.838 ms\n 3  109.101.201.49 (109.101.201.49)  4.894 ms  4.971 ms  4.810 ms\n 4  193.231.103.0 (193.231.103.0)  9.634 ms  9.467 ms  9.359 ms\n 5  10.0.241.109 (10.0.241.109)  8.547 ms  9.129 ms  9.958 ms\n 6  * * *\n 7  10.0.240.194 (10.0.240.194)  59.356 ms  39.555 ms 10.0.200.6 (10.0.200.6)  39.579 ms\n 8  10.0.240.121 (10.0.240.121)  39.426 ms  39.373 ms  38.338 ms\n 9  92.87.30.10 (92.87.30.10)  42.521 ms  39.938 ms  41.795 ms\n10  * 10.252.185.126 (10.252.185.126)  40.778 ms *\n11  142.250.226.148 (142.250.226.148)  38.924 ms 172.253.73.152 (172.253.73.152)  41.083 ms 108.170.252.1 (108.170.252.1)  42.216 ms\n12  142.250.225.77 (142.250.225.77)  39.563 ms 108.170.252.18 (108.170.252.18)  40.317 ms 142.250.225.77 (142.250.225.77)  36.148 ms\n13  fra16s52-in-f14.1e100.net (142.250.185.206)  40.195 ms 209.85.242.79 (209.85.242.79)  39.355 ms 108.170.236.249 (108.170.236.249)  38.919 ms\n")),(0,o.yg)("p",null,"Let's explain the output.\nEach line represents a ",(0,o.yg)("strong",{parentName:"p"},"hop")," (i.e. a router) that a packet must pass through in order to reach ",(0,o.yg)("inlineCode",{parentName:"p"},"google.com"),".\nThe first number is the index of the hop.\nThe second is the ",(0,o.yg)("em",{parentName:"p"},"IP")," of the network.\nYou've probably heard about IPs before.\nWe'll demystify them in a bit.\n",(0,o.yg)("inlineCode",{parentName:"p"},"traceroute")," sends 3 packets, for consistency.\nIt counts the time it takes from sending each of these packets to the moment the response reaches the sender.\nThis time is called ",(0,o.yg)("strong",{parentName:"p"},"Round Trip Time (RTT)"),".\nAs we said, ",(0,o.yg)("inlineCode",{parentName:"p"},"traceroute")," sends and monitors 3 packets in order to display the consistency of the link to each hop."),(0,o.yg)("p",null,"The first hop is between the VM and the host.\nThe other is the router to which the host is connected.\nFrom then on, it's the wild internet itself."),(0,o.yg)("h2",{id:"ip-addresses"},"IP Addresses"),(0,o.yg)("p",null,"IP addresses or, in short, ",(0,o.yg)("strong",{parentName:"p"},"IPs"),", are 32-bit (i.e. 4 bytes) numbers used to identify ",(0,o.yg)("strong",{parentName:"p"},"hosts"),".\nIP stands for ",(0,o.yg)("strong",{parentName:"p"},"Internet Protocol"),", which is the most widely used internet layer protocol.\nNotice the difference between IPs and MACs.\nWhile MACs are associated with NICs, IPs are associated with hosts.\nAnother difference is that whereas a MAC is unique to and engraved into the NIC, a host can change its IP more easily.\nWe won't go into this in today's session, but you can read about one such mechanism called ",(0,o.yg)("a",{parentName:"p",href:"/essentials-security/Demystifying%20the%20Web/Explaining%20the%20Internet/Reading/further-reading#dhcp"},"DHCP"),"."),(0,o.yg)("p",null,"Of course you are free to express an IP address however you like, but by far the most common representation is to write each of its 4 bytes individually, in the decimal base, separated by a dot (",(0,o.yg)("inlineCode",{parentName:"p"},"."),").\nYou've already seen IPs when connecting to the remote hosts during the previous sessions.\nSome IPs are:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"8.8.8.8"),": is the address of Google's Public DNS Service.\nWe'll explain what the DNS is in a future ",(0,o.yg)("a",{parentName:"li",href:"/essentials-security/Demystifying%20the%20Web/Explaining%20the%20Internet/Reading/further-reading#dns"},"section"),"."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"69.63.176.13"),": is a common IP address used by Facebook"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"141.85.224.100"),": is IP the address of one of the machines in our CTF infrastructure")),(0,o.yg)("p",null,"In order to see the IP of your machine, run the following command:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"\u250c\u2500\u2500(kali\u327fkali)-[~]\n\u2514\u2500$ ip address show\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 08:00:27:3c:2a:8d brd ff:ff:ff:ff:ff:ff\n    inet 10.0.2.15/24 brd 10.0.2.255 scope global dynamic noprefixroute eth0\n       valid_lft 86379sec preferred_lft 86379sec\n    inet6 fe80::262a:29ff:8129:db77/64 scope link noprefixroute\n       valid_lft forever preferred_lft forever\n")),(0,o.yg)("p",null,"Your output may differ slightly."),(0,o.yg)("p",null,"An IP address is associated with a ",(0,o.yg)("strong",{parentName:"p"},"network interface"),".\nThese interfaces can be virtual or physical (present on your NIC).\nIn your Kali VM, all interfaces are virtual."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},(0,o.yg)("inlineCode",{parentName:"strong"},"lo"))," is the ",(0,o.yg)("strong",{parentName:"p"},"loopback")," interface.\nIt's an internal interface that each host possesses.\nIts purpose is for testing the OS's TCP/IP stack.\nIts IP is, by convention ",(0,o.yg)("inlineCode",{parentName:"p"},"127.0.0.1"),", or ",(0,o.yg)("inlineCode",{parentName:"p"},"0.0.0.0"),"."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},(0,o.yg)("inlineCode",{parentName:"strong"},"eth0"))," is the interface used to connect to the internet.\nIt acts as a middleman between your host OS (the one in which you're running the VM) and the guest OS (Kali).\nIts status is ",(0,o.yg)("em",{parentName:"p"},"UP")," (i.e. it's running) and its IP address is ",(0,o.yg)("inlineCode",{parentName:"p"},"10.0.2.15"),"."),(0,o.yg)("p",null,"Notice the ",(0,o.yg)("inlineCode",{parentName:"p"},"/24")," part."),(0,o.yg)("h3",{id:"ping"},(0,o.yg)("inlineCode",{parentName:"h3"},"ping")),(0,o.yg)("p",null,"In order to test whether a host is up or down, we can ",(0,o.yg)("inlineCode",{parentName:"p"},"ping")," its IP.\n",(0,o.yg)("inlineCode",{parentName:"p"},"ping")," sends packets to the given host (IP or website) and reports whether the host responds or not.\nIf it responds, it's obviously alive.\nOtherwise... it's complicated.\nIt can either be dead itself, ",(0,o.yg)("strong",{parentName:"p"},"or there can be no route to it"),".\nIf we consider that the connection between us and our pinged host is ",(0,o.yg)("em",{parentName:"p"},"mediated")," by a chain of routers, as shown in the image above, if ",(0,o.yg)("strong",{parentName:"p"},"one")," of those routers is down and doesn't transmit packets, then we may be unable to reach the pinged host.\nSo a better wording is to say that when a host doesn't respond to pings, it's not necessarily ",(0,o.yg)("em",{parentName:"p"},"down"),", but merely ",(0,o.yg)("strong",{parentName:"p"},"unreachable"),".\nFrom a host's point of view though, it's irrelevant whether a host is down for real or not.\nAn unreachable host is as good as a dead one: ",(0,o.yg)("em",{parentName:"p"},"useless"),"."),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"localhost"),", in other words the ",(0,o.yg)("inlineCode",{parentName:"p"},"lo")," interface, should ",(0,o.yg)("strong",{parentName:"p"},"always")," be up and respond to pings.\nIn case it doesn't, well... your kernel's TCP/IP stack may be broken.\nWe use the ",(0,o.yg)("inlineCode",{parentName:"p"},"-c 3"),' parameter to only send 3 "pings" to ',(0,o.yg)("inlineCode",{parentName:"p"},"localhost"),".\nOtherwise, ",(0,o.yg)("inlineCode",{parentName:"p"},"ping")," sends packets continuously, until stopped manually (with ",(0,o.yg)("inlineCode",{parentName:"p"},"ctrl + c"),")."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"\u250c\u2500\u2500(kali\u327fkali)-[~]\n\u2514\u2500$ ping -c 3 127.0.0.1\nPING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.\n64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.040 ms\n64 bytes from 127.0.0.1: icmp_seq=2 ttl=64 time=0.060 ms\n64 bytes from 127.0.0.1: icmp_seq=3 ttl=64 time=0.046 ms\n\n--- 127.0.0.1 ping statistics ---\n3 packets transmitted, 3 received, 0% packet loss, time 2053ms\nrtt min/avg/max/mdev = 0.040/0.048/0.060/0.008 ms\n")),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"ping")," also tells us the RTT to the pinged host.\nNotice the very small times when pinging ourselves.\nThis makes sense, since there are no hops (routers) between a host and itself."),(0,o.yg)("p",null,"Now let's ",(0,o.yg)("inlineCode",{parentName:"p"},"ping")," a remote server, say ",(0,o.yg)("inlineCode",{parentName:"p"},"google.com"),".\nWe can ",(0,o.yg)("inlineCode",{parentName:"p"},"ping")," either an IP or a URL."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"\u250c\u2500\u2500(kali\u327fkali)-[~]\n\u2514\u2500$ ping -c 3 google.com\nPING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.\n64 bytes from 8.8.8.8: icmp_seq=1 ttl=63 time=39.0 ms\n64 bytes from 8.8.8.8: icmp_seq=2 ttl=63 time=50.1 ms\n64 bytes from 8.8.8.8: icmp_seq=3 ttl=63 time=44.6 ms\n\n--- 8.8.8.8 ping statistics ---\n3 packets transmitted, 3 received, 0% packet loss, time 2003ms\nrtt min/avg/max/mdev = 39.031/44.556/50.078/4.509 ms\n")),(0,o.yg)("p",null,"Now the RTTs are longer, because of the routing taking place between our VM and ",(0,o.yg)("inlineCode",{parentName:"p"},"google.com"),".\nThe more routers on the way, the longer the RTT."))}c.isMDXComponent=!0},253:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/router_in_action-1090b63958dad67f66d3518e9560a935.svg"}}]);